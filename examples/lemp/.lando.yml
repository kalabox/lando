# LEMP stack example
name: lemp

# Give me http://lemp.lndo.site and https://lemp.lndo.site
proxy:
  nginx:
    - lemp.lndo.site

# Spin up services to run a basic LEMP stack
services:

  # Create a php 7.1 instance served by the latest nginx with https turned on and
  # served from the www subdirectory
  appserver:

    # PHP version .1
    type: php:7.1

    # Served by the latest nginx
    via: nginx

    # Optionally serve php over https
    ssl: true

    # Optionally specify a webroot if it is a subdirectory of the appRoot
    webroot: www

    # Optionally activate xdebug
    #
    # If you are having trouble getting xdebug to work please see:
    # https://docs.devwithlando.io/services/php.html#using-xdebug
    xdebug: true

    # Optionally customize the configuration for php and its underlying webserver
    # These paths are both relative to (and must reside within) the app root directory
    #
    # For some examples that use this fairly well please check out
    # https://github.com/lando/lando/tree/master/examples
    config:

      # Use a custom nginx config file
      server: config/nginx/default.conf

      # Use a custom php.ini
      # This **should** load last which means you should be able to override
      # any previously set php settings.
      conf: config/php/php.ini

    # Optionally install the following composer dependencies globally
    # These follow the normal composer.json form
    # Note that many composer dependencies should not be installed globally but
    # on a per-project basis
    composer:
      overtrue/phplint: '*'

    # Optionally run the following commands after the service is started
    # Runs composer install but dont fail on an error
    run:
      - "cd $LANDO_MOUNT && composer install || true"

  # Add in the latest mariadb
  database:
    type: mariadb
    portforward: 3332
    config:
      confd: config/mysql

  # Add latest node for cli tools
  node:
    type: node:6.10

# Add some nice command routing
tooling:
  phplint:
    service: appserver
  composer:
    service: appserver
    description: Run composer commands
    cmd:
      - composer
      - --ansi
  php:
    service: appserver
  mysql:
    user: root
    service: database
    description: Drop into a MySQL shell
  npm:
    service: node
  node:
    service: node
