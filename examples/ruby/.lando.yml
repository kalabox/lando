# Ruby server
name: ruby

# Give me http://ruby.lndo.site and https://ruby.lndo.site
proxy:
  appserver:
    - ruby.lndo.site

# Spin up services to run a basic ruby server
services:

  # Create a ruby instance
  appserver:

    # Ruby version 2.4
    type: ruby:2.4

    # Optionally create certs in /certs that can be used by your application
    # to listen over https. Creates the following certs your app can use
    #
    #   - /certs/cert.key
    #   - /certs/cert.crt
    #   - /certs/cert.pem
    #
    # ssl: true

    # Optionally specify a command/script to run when you start your ruby service up.
    #
    # If you are using ruby as a server you are going to want to define this.
    # This can be either a string or array.
    #
    # If you are just spinning up a ruby container for usage as a cli tool
    # you can leave this blank and the container will boot up and stay on
    #
    # You will likely want to run needed build steps eg `lando bundler install`
    # first so needed dependencies are installed before your server starts up.
    #
    command: ruby /app/server.rb

    # Install some extra server packages
    # run_as_root:
    #  - "apt-get update -y"
    #  - "apt-get install vim -y"

    # Print a message just to demonstrate this
    # run:
    # - "cd $LANDO_MOUNT & echo 'Holla!'"

# Add some nice command routing
tooling:

  # Any ruby service with a defined command (aka not running in cli only mode)
  # Will also spin up a ruby cli container called `SERVICENAME_cli` (appserver_cli)
  # in this example.
  #
  # This will allow you to run things like `lando gem install` without needing
  # to `lando start` first. This is particularly needed for ruby based projects
  # since you almost always need to run `gem/bundler install` before you can boot up your
  # app successfully.
  gem:
    service: appserver_cli
  ruby:
    service: appserver_cli
  bundler:
    service: appserver_cli

  # This will only be available if you run `lando gem install travis` first
  travis:
    service: appserver_cli
