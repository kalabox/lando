# Varnish recipe example
name: varnish

# Start with the default LEMP recipe
recipe: lemp

# Override lemp proxy settings because we want varnish to get hit on requests
# to port 80 and the edge-ssl to get requests from port 443
proxy:

  # Empty the proxy settings provided by lemp recipe
  nginx:

  # Replace with our varnish and ssl termination endpoints
  edge:
    - port: 80/tcp
      default: true
  edge_ssl:
    - port: 443/tcp
      default: true
      secure: true

# Set up my services
services:

  # Lets set up an edge
  edge:
    type: varnish:4.1

    # Specify the backend(s) that varnish should attempt to connect to
    #
    # This can be an array or string and should be the names of other services
    # provided directly by this file or by a recipe. You can discover the services
    # your app has by running `lando info`
    #
    backends:
      - nginx

    # Optionally spin up another nginx instance so that you can secure your
    # traffic over ssl
    #
    # The varnish ssl service will be called NAME_ssl, or edge_ssl in this
    # example
    #
    ssl: true

    # Optionally load in a custom vcl file. This is relative to the app root
    #
    # You will not need to import the standard library or manage backends in this
    # file. Those are handled automatically.
    #
    vcl: custom.vcl

    # There are various envvars you can specify to further customize how your
    # varnish works.
    #
    # See: https://hub.docker.com/r/eeacms/varnish/
    #
    # overrides:
      # services:
        # environment:
          # BACKENDS_PORT: 8080
          # DNS_ENABLED: true
          # BACKENDS_PROBE_INTERVAL: 3s
          # BACKENDS_PROBE_TIMEOUT: 1s
          # BACKENDS_PROBE_WINDOW: 3
          # BACKENDS_PROBE_THRESHOLD: 2

# Add in routes to the varnish cli tools
tooling:
  varnishadm:
    service: edge
    user: root
  varnishstat:
    service: edge
    user: root
  varnishlog:
    service: edge
    user: root
